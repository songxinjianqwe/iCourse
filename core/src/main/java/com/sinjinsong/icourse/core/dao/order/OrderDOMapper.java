package com.sinjinsong.icourse.core.dao.order;

import com.github.pagehelper.Page;
import com.sinjinsong.icourse.core.domain.dto.order.OrderQueryConditionDTO;
import com.sinjinsong.icourse.core.domain.entity.order.OrderDO;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import java.util.List;

@Mapper
public interface OrderDOMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order
     *
     * @mbggenerated
     */
    int insert(OrderDO record);


    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order
     *
     * @mbggenerated
     */
    OrderDO selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(OrderDO record);
    Page<OrderDO> findAll(@Param("pageNum") Integer pageNum, @Param("pageSize") Integer pageSize);
    Page<OrderDO> findByCondition(@Param("condition") OrderQueryConditionDTO condition, @Param("pageNum") Integer pageNum, @Param("pageSize") Integer pageSize);
    List<OrderDO> findByStudentIdAndClassId(@Param("studentId") Long studentId,@Param("classId") Long classId);
    Page<OrderDO> findUnSettledOrders(@Param("pageNum") Integer pageNum, @Param("pageSize") Integer pageSize);
    void setOrdersSettledBatch(@Param("ids") List<Long> orderIds);
}